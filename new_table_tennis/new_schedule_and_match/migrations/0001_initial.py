# Generated by Django 4.2.2 on 2023-08-15 08:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="TheUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("id_user", models.AutoField(primary_key=True, serialize=False)),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("last_name", models.CharField(max_length=255)),
                (
                    "forehand_rubber_type",
                    models.CharField(
                        choices=[
                            ("short or long pimples", "short or long pimples"),
                            ("inverted", "inverted"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "backhand_rubber_type",
                    models.CharField(
                        choices=[
                            ("short or long pimples", "short or long pimples"),
                            ("inverted", "inverted"),
                        ],
                        max_length=255,
                    ),
                ),
                ("competition_rating", models.IntegerField()),
                ("real_world_rating", models.IntegerField()),
                ("serve_feedback", models.FloatField()),
                ("receive_feedback", models.FloatField()),
                ("forehand_loop_feedback", models.FloatField()),
                ("backhand_loop_feedback", models.FloatField()),
                ("forehand_block_feedback", models.FloatField()),
                ("backhand_block_feedback", models.FloatField()),
                ("personal_feedback", models.FloatField()),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "new_schedule_and_match_user",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                ("id_location", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("the_address", models.CharField(max_length=255)),
                ("table_number", models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name="Match",
            fields=[
                ("id_match", models.AutoField(primary_key=True, serialize=False)),
                (
                    "the_current_status_a",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("accepted", "accepted"),
                            ("rejected", "rejected"),
                            ("deleted", "deleted"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "the_current_status_b",
                    models.CharField(
                        choices=[
                            ("pending", "pending"),
                            ("accepted", "accepted"),
                            ("rejected", "rejected"),
                            ("deleted", "deleted"),
                        ],
                        max_length=255,
                    ),
                ),
                ("date", models.DateField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("training", "training"),
                            ("competitive", "competitive"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "start_time",
                    models.IntegerField(
                        choices=[
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                            (11, 11),
                            (12, 12),
                            (13, 13),
                            (14, 14),
                            (15, 15),
                            (16, 16),
                            (17, 17),
                            (18, 18),
                            (19, 19),
                            (20, 20),
                        ]
                    ),
                ),
                (
                    "id_player_a",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_a",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "id_player_b",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="player_b",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="new_schedule_and_match.location",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Schedule",
            fields=[
                ("id_schedule", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("training", "training"),
                            ("competitive", "competitive"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "start_time",
                    models.IntegerField(
                        choices=[
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                            (11, 11),
                            (12, 12),
                            (13, 13),
                            (14, 14),
                            (15, 15),
                            (16, 16),
                            (17, 17),
                            (18, 18),
                            (19, 19),
                            (20, 20),
                        ]
                    ),
                ),
                (
                    "id_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="new_schedule_and_match.location",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Result",
            fields=[
                ("id_result", models.AutoField(primary_key=True, serialize=False)),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "pending"), ("completed", "completed")],
                        max_length=255,
                    ),
                ),
                (
                    "id_match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="new_schedule_and_match.match",
                    ),
                ),
                (
                    "id_player_victory",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Feedback",
            fields=[
                ("id_feedback", models.AutoField(primary_key=True, serialize=False)),
                (
                    "status",
                    models.CharField(
                        choices=[("pending", "pending"), ("completed", "completed")],
                        max_length=255,
                    ),
                ),
                (
                    "serve_feedback",
                    models.IntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                        ],
                        default=1,
                    ),
                ),
                (
                    "receive_feedback",
                    models.IntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                        ],
                        default=1,
                    ),
                ),
                (
                    "forehand_loop_feedback",
                    models.IntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                        ],
                        default=1,
                    ),
                ),
                (
                    "backhand_loop_feedback",
                    models.IntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                        ],
                        default=1,
                    ),
                ),
                (
                    "forehand_block_feedback",
                    models.IntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                        ],
                        default=1,
                    ),
                ),
                (
                    "backhand_block_feedback",
                    models.IntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                        ],
                        default=1,
                    ),
                ),
                (
                    "personal_feedback",
                    models.IntegerField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                        ],
                        default=1,
                    ),
                ),
                (
                    "id_match",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="new_schedule_and_match.match",
                    ),
                ),
                (
                    "id_player_a",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_player_a",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "id_player_b",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_player_b",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
